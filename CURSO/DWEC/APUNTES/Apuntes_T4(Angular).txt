//Actualizar npm
npm install -g npm

//Instalar Angular en un proyecto
npm install -g @angular/cli

//Creación de proyecto standalone
ng new <proyectName>
no
css
no

//Creación de proyecto con módulos (sin standalone)
ng new <proyectName> --no-standalone --skip-tests

//Iniciar proyecto
ng serve

//Crear componente
ng g c <componentName>

//Crear servicio
ng g s <serviceName>

//Instalar módulos (node_modules)
npm install

//--------------------------------------------------------------
//CÓDIGO SIN STANDALONE

-En app.module.ts, para poder usar HttpClientModule y FormsModule, poner:
import { HttpClientModule } from '@angular/common/http';
import { FormsModule } from '@angular/forms';
También, si se crean nuevos componentes, añadirlos también en dicho archivo

-Sin standalone, necesitaremos un .service para poder conectarse a la base de datos y poder realizar
las distintas funciones del mismo

-En app.routing.module.ts, se realizarán las conexiones de cada componente a partir de rutas.
Simplemente, se implementa el componente nuevo y añadimos una ruta en Routes. Si queremos poner un componente como ruta
por defecto, en path poner "", como poe ejemplo:
const routes: Routes = [
  {path:"", component: ListadoComponent},
  {path:"personas-add/:id", component: FormPersonaComponent}
];

//--------------------------------------------------------------
//CÓDIGO CON STANDALONE

-Para usar HttpClient, en app.config.ts, poner:
import { provideHttpClient } from '@angular/common/http';

-Hay que asegurarse de que, en app.component.ts está presente el import de RouterOutlet:
import { RouterOutlet } from '@angular/router';

-Para poner las rutas de cada componente creado, se hace igual que sin standalone, pero en
el archivo app.routes.ts: 
export const routes: Routes = [
    {path:"", component: ListadoPersonasComponent},
    {path:"personas-add/:id", component: FormPersonasComponent}
];

-En sus respectivos .component.ts de los componentes, importar lo necesario. En ambos deben estar HttpClient, PAjaxService y el modelo de una interfaz
Si uno de ellos recibe algo como enlace, además de importar Router, importar ActivatedRoute. Todo esto también se aplica al servicio. 

-Hay que tener en cuenta que, en standalone, el uso del RouterLink debe ser importado en sus respectivos .component.ts si se llegan a usar